import{_ as i,c as a,o as n,ae as l}from"./chunks/framework.Dq_dEmAK.js";const E=JSON.parse('{"title":"Nginx与Vue Router路径冲突问题总结","description":"","frontmatter":{},"headers":[],"relativePath":"development/frontend/nginx-vue-router-experience.md","filePath":"development/frontend/nginx-vue-router-experience.md"}'),e={name:"development/frontend/nginx-vue-router-experience.md"};function t(h,s,p,r,k,d){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="nginx与vue-router路径冲突问题总结" tabindex="-1">Nginx与Vue Router路径冲突问题总结 <a class="header-anchor" href="#nginx与vue-router路径冲突问题总结" aria-label="Permalink to &quot;Nginx与Vue Router路径冲突问题总结&quot;">​</a></h1><h2 id="问题描述" tabindex="-1">问题描述 <a class="header-anchor" href="#问题描述" aria-label="Permalink to &quot;问题描述&quot;">​</a></h2><p>在使用 Vue Router 的 history 模式时，访问 <code>/home</code> 路径会出现以下问题：</p><ol><li>首次访问 <code>http://localhost:2333/home</code> 正常</li><li>刷新页面后，URL 变成 <code>http://localhost/home/</code>，出现以下问题： <ul><li>端口号（2333）丢失</li><li>路径末尾多了一个斜杠</li><li>页面返回 403 Forbidden 错误</li></ul></li></ol><h2 id="问题原因" tabindex="-1">问题原因 <a class="header-anchor" href="#问题原因" aria-label="Permalink to &quot;问题原因&quot;">​</a></h2><ol><li><p><strong>物理目录冲突</strong>：</p><ul><li>前端项目打包后，在 dist 目录中实际创建了一个 <code>home</code> 目录</li><li>当 nginx 收到对 <code>/home</code> 的请求时，发现存在物理目录</li><li>nginx 默认会将目录访问重定向到带斜杠的形式（如 <code>/home/</code>）</li></ul></li><li><p><strong>重定向过程</strong>：</p><ul><li>nginx 检测到 <code>/home</code> 是一个目录</li><li>触发目录访问的重定向规则</li><li>重定向过程中丢失了端口信息</li><li>最终导致 403 错误</li></ul></li><li><p><strong>为什么其他路由正常</strong>：</p><ul><li>其他路由路径（如 <code>/login</code>）在打包后没有对应的物理目录</li><li>请求直接通过 <code>try_files</code> 指令返回 <code>index.html</code></li><li>不会触发目录重定向逻辑</li></ul></li></ol><h2 id="解决方案" tabindex="-1">解决方案 <a class="header-anchor" href="#解决方案" aria-label="Permalink to &quot;解决方案&quot;">​</a></h2><h3 id="_1-nginx-配置修改-快速解决" tabindex="-1">1. Nginx 配置修改（快速解决） <a class="header-anchor" href="#_1-nginx-配置修改-快速解决" aria-label="Permalink to &quot;1. Nginx 配置修改（快速解决）&quot;">​</a></h3><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    root </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  /var/www/html;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    index </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> index.html index.htm;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 如果请求的是目录，直接重写到index.html</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-d </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$request_filename) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        rewrite</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;"> ^/(.*)$</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /index.html </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">last</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 如果文件不存在，返回index.html</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    try_files </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$uri /index.html;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Host $http_host;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">X-Real-IP $remote_addr;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">X-Forwarded-For $proxy_add_x_forwarded_for;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">X-Forwarded-Proto $scheme;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_2-前端路由改进-最佳实践" tabindex="-1">2. 前端路由改进（最佳实践） <a class="header-anchor" href="#_2-前端路由改进-最佳实践" aria-label="Permalink to &quot;2. 前端路由改进（最佳实践）&quot;">​</a></h3><ol><li><strong>添加路由前缀</strong>：</li></ol><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> router</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> VueRouter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  mode: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;history&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  base: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/portal/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 添加应用前缀</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  routes: [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><ol start="2"><li><strong>修改构建配置</strong>：</li></ol><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  publicPath: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/portal/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  outputDir: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;dist&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  assetsDir: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;_assets&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 使用下划线前缀避免冲突</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_3-其他可选方案" tabindex="-1">3. 其他可选方案 <a class="header-anchor" href="#_3-其他可选方案" aria-label="Permalink to &quot;3. 其他可选方案&quot;">​</a></h3><ol><li><strong>使用 Hash 模式</strong>：</li></ol><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> router</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> VueRouter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  mode: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hash&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  routes: [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><ol start="2"><li><strong>修改资源输出结构</strong>：</li></ol><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  build: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    assetsDir: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;_assets&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    html: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      filename: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;app.html&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="最佳实践建议" tabindex="-1">最佳实践建议 <a class="header-anchor" href="#最佳实践建议" aria-label="Permalink to &quot;最佳实践建议&quot;">​</a></h2><ol><li><p><strong>路由命名空间</strong>：</p><ul><li>给前端应用添加基础路径（如 <code>/portal/</code>）</li><li>避免与系统路径（如 <code>/home</code>）冲突</li><li>便于多应用部署和管理</li></ul></li><li><p><strong>资源文件组织</strong>：</p><ul><li>使用特殊前缀（如 <code>_assets</code>）存放静态资源</li><li>避免资源目录与路由路径重名</li><li>清晰的目录结构便于维护</li></ul></li><li><p><strong>Nginx 配置</strong>：</p><ul><li>使用通用的重写规则处理目录访问</li><li>正确配置 <code>try_files</code> 指令</li><li>保留必要的请求头信息</li></ul></li></ol><h2 id="经验总结" tabindex="-1">经验总结 <a class="header-anchor" href="#经验总结" aria-label="Permalink to &quot;经验总结&quot;">​</a></h2><ol><li>在使用 history 模式时，需要注意路由路径与物理目录的潜在冲突</li><li>系统相关的路径名（如 <code>home</code>）需要特别注意</li><li>建议使用应用前缀来隔离前端路由空间</li><li>合理组织静态资源目录结构，避免与路由冲突</li><li>nginx 配置需要考虑目录访问的处理逻辑</li></ol><h2 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-label="Permalink to &quot;参考链接&quot;">​</a></h2><ul><li><a href="https://router.vuejs.org/guide/essentials/history-mode.html" target="_blank" rel="noreferrer">Vue Router 文档 - HTML5 History 模式</a></li><li><a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#try_files" target="_blank" rel="noreferrer">Nginx 文档 - try_files 指令</a></li><li><a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#absolute_redirect" target="_blank" rel="noreferrer">Nginx 文档 - 目录重定向</a></li></ul>`,25)]))}const g=i(e,[["render",t]]);export{E as __pageData,g as default};
